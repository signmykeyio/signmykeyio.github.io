<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Howtos on Signmykey</title>
    <link>https://signmykey.io/howtos/</link>
    <description>Recent content in Howtos on Signmykey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://signmykey.io/howtos/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LDAP Server</title>
      <link>https://signmykey.io/howtos/ldapserver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://signmykey.io/howtos/ldapserver/</guid>
      <description>This HOWTO describe how to configure an LDAP server using glauth.
Installation Download wget https://github.com/glauth/glauth/releases/download/v1.1.0/glauth64 -O /usr/local/bin/glauth chmod +x /usr/local/bin/glauth User and directories useradd --no-create-home -s /bin/false glauth mkdir -m 700 /etc/glauth wget https://raw.githubusercontent.com/glauth/glauth/master/sample-simple.cfg -O /etc/glauth/glauth.cfg chown -R glauth: /etc/glauth/ Configuration The default configuration downloaded during the previous step contains some users.
Launch runuser -s /bin/bash -l glauth -c &amp;#39;glauth -c /etc/glauth/glauth.cfg&amp;#39; Usage List LDAP entries
ldapsearch -LLL -H ldap://localhost:3893 -D cn=serviceuser,ou=svcaccts,dc=glauth,dc=com -w mysecret -x -bdc=glauth,dc=com </description>
    </item>
    
    <item>
      <title>OpenID Connect ROPC compliant server</title>
      <link>https://signmykey.io/howtos/oidcropc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://signmykey.io/howtos/oidcropc/</guid>
      <description>This HOWTO describe how to configure an OpenID Connect ROPC client using Keycloak.
Your Keycloak server must be already setup.
Create a new client in your Realm Using Admin web interface:
Important options:
 Client ID: signmykey (will be used in signmykey config file) Client Protocol: openid-connect  Client options Important options:
 Client ID: signmykey Access Type: confidential Direct Access Grants Enabled: ON (This enables ROPC grant flow)  Grab Client Secret Once you saved configuration with &amp;ldquo;Access Type: confidential&amp;rdquo;, you now have access to credentials.</description>
    </item>
    
    <item>
      <title>Vault PKI</title>
      <link>https://signmykey.io/howtos/vaultpki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://signmykey.io/howtos/vaultpki/</guid>
      <description>This HOWTO describe how to configure a Vault server with a PKI to sign its own certificate.
Installation Download apt install unzip VAULTVERSION=1.1.3 cd /tmp wget https://releases.hashicorp.com/vault/${VAULTVERSION}/vault_${VAULTVERSION}_linux_amd64.zip unzip vault_${VAULTVERSION}_linux_amd64.zip &amp;amp;&amp;amp; rm vault_${VAULTVERSION}_linux_amd64.zip sudo mv vault /usr/local/bin/vault User and directories useradd --no-create-home -s /bin/false vault mkdir -m 700 /etc/vault /var/lib/vault chown vault: /etc/vault /var/lib/vault Configuration Config file /etc/vault/vault.conf
backend &amp;quot;file&amp;quot; { path = &amp;quot;/var/lib/vault&amp;quot; } listener &amp;quot;tcp&amp;quot; { address = &amp;quot;0.0.0.0:8200&amp;quot; #tls_cert_file = &amp;quot;/etc/vault/vault.</description>
    </item>
    
  </channel>
</rss>